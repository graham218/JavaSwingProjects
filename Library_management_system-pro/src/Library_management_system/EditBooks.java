/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Library_management_system;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class EditBooks extends javax.swing.JFrame {

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    String path1;
    /**
     * Creates new form CreateAccount
     */
    public EditBooks() {
        initComponents();
        Connection();
    }

    String username;
    BufferedImage imag;
    public EditBooks(String username,BufferedImage imag) {
        initComponents();
        Connection();
        this.username=username;
        this.imag=imag;
        lblUsername.setText(username);
        lblProfile.setIcon(new ImageIcon(new javax.swing.ImageIcon(imag).getImage().getScaledInstance(lblProfile.getWidth(), lblProfile.getHeight(), Image.SCALE_SMOOTH)));
        books_table();
        lblBackground.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("../Images/caleb-woods-fulXJYIvRi8-unsplash.jpg")).getImage().getScaledInstance(lblBackground.getWidth(), lblBackground.getHeight(), Image.SCALE_SMOOTH)));
    }
    public void Connection(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost/library","root","");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EditBooks.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(EditBooks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void books_table(){
        try {
            pst=con.prepareStatement("select * from books");
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i =1; i <=c; i++) {
                    v.add(rs.getString("bookId"));
                    v.add(rs.getString("bookNo"));
                    v.add(rs.getString("bookName"));
                    v.add(rs.getString("author"));
                    v.add(rs.getString("description"));
                    v.add(rs.getInt("price"));
                    v.add(rs.getString("status"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditBooks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        txtBookNo = new javax.swing.JTextField();
        lblProfile = new javax.swing.JLabel();
        homeBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        lblBookId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        txtBookPrice = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        combStatus = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EDIT BOOKS");
        setMaximizedBounds(new java.awt.Rectangle(1200, 700, 700, 700));
        setMinimumSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BOOK ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 120, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BOOK NO:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 110, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("BOOK NAME:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 170, -1));

        lblUsername.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText("USERNAME");
        jPanel1.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 90, 120, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("AUTHOR:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 160, -1));

        txtBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookNameKeyPressed(evt);
            }
        });
        jPanel1.add(txtBookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 210, 30));

        txtBookNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookNoKeyPressed(evt);
            }
        });
        jPanel1.add(txtBookNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 210, 30));

        lblProfile.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jPanel1.add(lblProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 0, 80, 80));

        homeBtn.setBackground(new java.awt.Color(0, 102, 102));
        homeBtn.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        homeBtn.setForeground(new java.awt.Color(255, 255, 255));
        homeBtn.setText("HOME");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(homeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 130, 40));

        clearBtn.setBackground(new java.awt.Color(0, 102, 0));
        clearBtn.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        jPanel1.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 130, 40));

        edit.setBackground(new java.awt.Color(102, 0, 102));
        edit.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel1.add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 130, 40));

        exitBtn.setBackground(new java.awt.Color(255, 0, 0));
        exitBtn.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(255, 255, 255));
        exitBtn.setText("EXIT");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        jPanel1.add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 510, 130, 40));

        lblBookId.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblBookId.setForeground(new java.awt.Color(255, 255, 255));
        lblBookId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jPanel1.add(lblBookId, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 210, 30));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BOOK ID", "BOOK NO", "BOOK NAME", "AUTHOR", "DESCRIPTION", "BOOK PRICE", "STATUS"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, 610, 430));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });
        jPanel1.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 210, 30));

        btnSearch.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnSearch.setText("SEARCH WITH BOOK NUMBER");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 70, 260, 30));

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, 100, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("BOOK PRICE:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 160, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DESCRIPTION:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 170, -1));

        txtAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAuthorKeyPressed(evt);
            }
        });
        jPanel1.add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 210, 30));

        txtBookPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookPriceKeyPressed(evt);
            }
        });
        jPanel1.add(txtBookPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 210, 30));

        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyPressed(evt);
            }
        });
        jPanel1.add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 210, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("STATUS:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 150, -1));

        combStatus.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        combStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT BOOK STATUS", "AVAILABLE", "ISSUED OUT" }));
        combStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combStatusKeyPressed(evt);
            }
        });
        jPanel1.add(combStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 210, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 1120, 580));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 102));
        jLabel9.setText("EDIT BOOKS");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 370, -1));
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        txtBookNo.setText("");
        txtBookName.setText("");
        txtAuthor.setText("");
        txtDescription.setText("");
        txtBookPrice.setText("");
        lblBookId.setText("");
        combStatus.getModel().setSelectedItem("SELECT BOOK STATUS");
        txtBookNo.requestFocus();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        this.setVisible(false);
        new Home(lblUsername.getText(),imag).setVisible(true);
    }//GEN-LAST:event_homeBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Do yo want to exit system","Confirm Exit",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void txtBookNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtBookName.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtBookName.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtBookPrice.requestFocus();
        } 
    }//GEN-LAST:event_txtBookNoKeyPressed

    private void txtBookNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtAuthor.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtAuthor.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtBookNo.requestFocus();
        }
    }//GEN-LAST:event_txtBookNameKeyPressed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        String bookId=lblBookId.getText();
        String bookNo=txtBookNo.getText();
        String name=txtBookName.getText();
        String author=txtAuthor.getText();
        String description=txtDescription.getText();
        int price=Integer.parseInt(txtBookPrice.getText());
        String status=combStatus.getModel().getSelectedItem().toString();
        
        if(bookNo.trim().equals("")){
                JOptionPane.showMessageDialog(this,"Enter Book Number, null book numbers cannot be submitted","Submission Error!!!",JOptionPane.CANCEL_OPTION);
                txtBookNo.requestFocus();
            }else if(name.trim().equals("")){
                JOptionPane.showMessageDialog(this,"Enter book name, null book names cannot be submitted","Submission Error!!!",JOptionPane.CANCEL_OPTION);
                txtBookName.requestFocus();
            }else if(author.trim().equals("")){
                JOptionPane.showMessageDialog(this,"Enter book author, null book authors cannot be submitted","Submission Error!!!",JOptionPane.CANCEL_OPTION);
                txtAuthor.requestFocus();
            }else if(description.trim().equals("")){
                JOptionPane.showMessageDialog(this,"Enter item description , null book descriptions cannot be submitted","Submission Error!!!",JOptionPane.CANCEL_OPTION);
                txtDescription.requestFocus();
            }else if(txtBookPrice.getText().trim().equals("")){
                JOptionPane.showMessageDialog(this,"Enter book's buying price, null book prices cannot be submitted","Submission Error!!!",JOptionPane.CANCEL_OPTION);
                txtBookPrice.requestFocus();
            }else if(status.trim().equals("SELECT BOOK STATUS")){
                JOptionPane.showMessageDialog(this,"Please select book status if availabe or issued out, null book statuses cannot be submitted","Submission Error!!!",JOptionPane.CANCEL_OPTION);
                combStatus.requestFocus();
            }else{
        try {
            pst=con.prepareStatement("update books set bookNO=?,bookName=?, author=?,description=?,price=?, status=? where bookId=?");
            pst.setString(1,bookNo);
            pst.setString(2,name);
            pst.setString(3,author);
            pst.setString(4,description);
            pst.setInt(5,price);
            pst.setString(6,status);
            pst.setString(7,bookId);
            int count=pst.executeUpdate();
            if(count>0){
            JOptionPane.showMessageDialog(this, "Book updated successfully","Success Message",JOptionPane.INFORMATION_MESSAGE);
            books_table();
            }else{
               JOptionPane.showMessageDialog(this, "An error occured while tring to send details into database, please try again","Error Message",JOptionPane.CANCEL_OPTION); 
            }
            txtBookNo.setText("");
            txtBookName.setText("");
            txtAuthor.setText("");
            txtDescription.setText("");
            txtBookPrice.setText("");
            lblBookId.setText("");
            combStatus.getModel().setSelectedItem("SELECT BOOK STATUS");
            txtBookNo.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(EditBooks.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        String bookId=lblBookId.getText();
        try {
            pst=con.prepareStatement("delete from books where bookId=?");
            pst.setString(1,bookId);
            int count=pst.executeUpdate();
            if(count>0){
            JOptionPane.showMessageDialog(this, "Book deleted successfully from database","Success Message",JOptionPane.INFORMATION_MESSAGE);
            books_table();
            }else{
               JOptionPane.showMessageDialog(this, "An error occured while tring to send details into database, please try again","Error Message",JOptionPane.CANCEL_OPTION); 
            }
            txtBookNo.setText("");
            txtBookName.setText("");
            txtAuthor.setText("");
            txtDescription.setText("");
            txtBookPrice.setText("");
            lblBookId.setText("");
            combStatus.getModel().setSelectedItem("SELECT BOOK STATUS");
            txtBookNo.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(EditBooks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int selectedIndex=table.getSelectedRow();
        
        lblBookId.setText(model.getValueAt(selectedIndex, 0).toString());
        txtBookNo.setText(model.getValueAt(selectedIndex, 1).toString());
        txtBookName.setText(model.getValueAt(selectedIndex, 2).toString());
        txtAuthor.setText(model.getValueAt(selectedIndex, 3).toString());
        txtDescription.setText(model.getValueAt(selectedIndex, 4).toString());
        txtBookPrice.setText(model.getValueAt(selectedIndex, 5).toString());
        combStatus.getModel().setSelectedItem(model.getValueAt(selectedIndex, 6).toString());
    }//GEN-LAST:event_tableMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String bookNo=txtSearch.getText();
        try {
            pst=con.prepareStatement("select * from books where bookNo LIKE CONCAT('%',?,'%')");
            pst.setString(1,bookNo);
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i =1; i <=c; i++) {
                    v.add(rs.getString("bookId"));
                    v.add(rs.getString("bookNo"));
                    v.add(rs.getString("bookName"));
                    v.add(rs.getString("author"));
                    v.add(rs.getString("description"));
                    v.add(rs.getInt("price"));
                    v.add(rs.getString("status"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditBooks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String bookNO=txtSearch.getText();
        try {
            pst=con.prepareStatement("select * from books where bookNO LIKE CONCAT('%',?,'%')");
            pst.setString(1,bookNO);
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i =1; i <=c; i++) {
                    v.add(rs.getString("bookId"));
                    v.add(rs.getString("bookNo"));
                    v.add(rs.getString("bookName"));
                    v.add(rs.getString("author"));
                    v.add(rs.getString("description"));
                    v.add(rs.getInt("price"));
                    v.add(rs.getString("status"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditBooks.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtAuthorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAuthorKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtDescription.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtDescription.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtBookName.requestFocus();
        }
    }//GEN-LAST:event_txtAuthorKeyPressed

    private void txtDescriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtBookPrice.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtBookPrice.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtDescription.requestFocus();
        }
    }//GEN-LAST:event_txtDescriptionKeyPressed

    private void txtBookPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookPriceKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            combStatus.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            combStatus.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtDescription.requestFocus();
        }
    }//GEN-LAST:event_txtBookPriceKeyPressed

    private void combStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combStatusKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            lblBookId.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            lblBookId.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtBookPrice.requestFocus();
        }
    }//GEN-LAST:event_combStatusKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton clearBtn;
    private javax.swing.JComboBox<String> combStatus;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBookId;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtBookNo;
    private javax.swing.JTextField txtBookPrice;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
