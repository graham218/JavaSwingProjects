/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.library.system;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bill
 */
public class Books extends javax.swing.JFrame {

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    /**
     * Creates new form Books
     */
    public Books() {
        initComponents();
    }
    
    String username;
    BufferedImage imag;
    public Books(String username, BufferedImage imag) {
        initComponents();
        this.username=username;
        lblUsername.setText(username);
        this.imag=imag;
        lblProfile.setIcon(new ImageIcon(new javax.swing.ImageIcon(imag).getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH)));
        Connect(); 
        book_table();
        Auto_Id();
        jLabel11.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("paul-melki-bByhWydZLW0-unsplash.jpg")).getImage().getScaledInstance(1240, 660, Image.SCALE_SMOOTH)));
    }

    public void Connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost/Library","root","");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void Auto_Id(){
        try {
            Statement s=con.createStatement();
            rs=s.executeQuery("select MAX(bookId) from books");
            rs.next();
            rs.getString("MAX(bookId)");
            if(rs.getString("MAX(bookId)")==null){
                lblID.setText("BK001");
            }else{
                long id=Long.parseLong(rs.getString("MAX(bookId)").substring(2,rs.getString("MAX(bookId)").length()));
                id++;
                lblID.setText("BK"+String.format("%03d", id));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void book_table(){
        try {
            pst=con.prepareStatement("select * from books");
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i = 1; i <= c; i++) {
                    v.add(rs.getString("bookId"));
                    v.add(rs.getString("bookNo"));
                    v.add(rs.getString("bookName"));
                    v.add(rs.getString("description"));
                    v.add(rs.getString("author"));
                    v.add(rs.getString("publisher"));
                    v.add(rs.getInt("price"));
                }
                model.addRow(v);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBookNo = new javax.swing.JTextField();
        txtBookName = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        clearBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        homeBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lblProfile = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BOOKS IN LIBRARY");
        setMaximizedBounds(new java.awt.Rectangle(1248, 677, 677, 677));
        setMaximumSize(new java.awt.Dimension(1248, 677));
        setMinimumSize(new java.awt.Dimension(1248, 677));
        setPreferredSize(new java.awt.Dimension(1248, 677));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(252, 20, 166));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BK ID", "BOOK NO", "NAME", "DESCRIPTION", "AUTHOR", "PUBLISHER", "PRICE"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 730, 500));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });
        jPanel1.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 250, 40));

        searchBtn.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        searchBtn.setText("SEARCH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 110, 40));

        jLabel2.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("BOOK NO:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("BOOK NAME:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("DESCRIPTION:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("AUTHOR:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jLabel6.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("PUBLISHER:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        txtBookNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookNoKeyPressed(evt);
            }
        });
        jPanel1.add(txtBookNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 220, 40));

        txtBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookNameKeyPressed(evt);
            }
        });
        jPanel1.add(txtBookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 220, 40));

        txtPublisher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPublisherKeyPressed(evt);
            }
        });
        jPanel1.add(txtPublisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 220, 40));

        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyPressed(evt);
            }
        });
        jPanel1.add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 220, 40));

        txtAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAuthorKeyPressed(evt);
            }
        });
        jPanel1.add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 220, 40));

        clearBtn.setBackground(new java.awt.Color(126, 42, 207));
        clearBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        clearBtn.setForeground(java.awt.Color.white);
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        jPanel1.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 130, 50));

        addBtn.setBackground(new java.awt.Color(26, 29, 246));
        addBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        addBtn.setForeground(java.awt.Color.white);
        addBtn.setText("ADD BOOK");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, 140, 50));

        editBtn.setBackground(new java.awt.Color(12, 149, 3));
        editBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        editBtn.setForeground(java.awt.Color.white);
        editBtn.setText("EDIT BOOK");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel1.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 140, 50));

        homeBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        homeBtn.setText("HOME");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(homeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 130, 50));

        deleteBtn.setBackground(new java.awt.Color(190, 32, 32));
        deleteBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        deleteBtn.setForeground(java.awt.Color.white);
        deleteBtn.setText("DELETE BOOK");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, 140, 50));

        exitBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(217, 38, 38));
        exitBtn.setText("EXIT SYSTEM");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        jPanel1.add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 450, 140, 50));

        lblID.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        lblID.setForeground(java.awt.Color.white);
        lblID.setText("BOOK ID");
        lblID.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 3));
        jPanel1.add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 220, 40));

        jLabel8.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("BOOK ID:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPriceKeyPressed(evt);
            }
        });
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 220, 40));

        jLabel9.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("PRICE:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        lblProfile.setBorder(new javax.swing.border.LineBorder(java.awt.Color.white, 3, true));
        jPanel1.add(lblProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 0, 60, 60));

        jLabel7.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("NOTE: DO NOT USE DECIMALS ON BOOK PRICES!!");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, -1, -1));

        jLabel10.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("USE BOOK NUMBER TO SEARCH");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 30, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1210, 590));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(11, 31, 247));
        jLabel1.setText("BOOKS IN LIBRARY");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, -1, -1));

        lblUsername.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(123, 27, 220));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText("USERNAME");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 20, 170, 30));
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 6, 1240, 660));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Do you want to exit System?","Library Management System",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        txtBookNo.setText("");
        txtBookName.setText("");
        txtDescription.setText("");
        txtAuthor.setText("");
        txtPublisher.setText("");
        txtPrice.setText("");
        txtBookNo.requestFocus();
        Auto_Id();
        editBtn.setEnabled(false);
        addBtn.setEnabled(true);
        deleteBtn.setEnabled(false);
    }//GEN-LAST:event_clearBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String bookId=lblID.getText();
        String bookNo=txtBookNo.getText();
        String bookName=txtBookName.getText();
        String description=txtDescription.getText();
        String author=txtAuthor.getText();
        String publisher=txtPublisher.getText();
        int price=Integer.parseInt(txtPrice.getText());
        
        if(bookNo.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book number, null book numbers cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtBookNo.requestFocus();
        }else if(bookName.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book name, null book names cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtBookName.requestFocus();
        }else if(description.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's description, null book descriptons cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtDescription.requestFocus();
        }else if(author.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter authors of the book, null book authors cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtAuthor.requestFocus();
        }else if(publisher.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's publisher, null publishers cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtPublisher.requestFocus();
        }else if(txtPrice.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's buying price, null book prices cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtPrice.requestFocus();
        }else{
            try {
                pst=con.prepareStatement("insert into books (bookId,bookNo,bookName,description,author,publisher,price) values(?,?,?,?,?,?,?)");
                pst.setString(1, bookId);
                pst.setString(2, bookNo);
                pst.setString(3, bookName);
                pst.setString(4, description);
                pst.setString(5, author);
                pst.setString(6, publisher);
                pst.setInt(7, price);
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(this,"Book Added Successfully into database","Success Message",JOptionPane.INFORMATION_MESSAGE);
                Auto_Id();
                txtBookNo.setText("");
                txtBookName.setText("");
                txtDescription.setText("");
                txtAuthor.setText("");
                txtPublisher.setText("");
                txtPrice.setText("");
                txtBookNo.requestFocus();
                book_table();
                    } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        String bookNo=txtBookNo.getText();
        String bookName=txtBookName.getText();
        String description=txtDescription.getText();
        String author=txtAuthor.getText();
        String publisher=txtPublisher.getText();
        int price=Integer.parseInt(txtPrice.getText());
        String bookId=lblID.getText();
        
        if(bookNo.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book number, null book numbers cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtBookNo.requestFocus();
        }else if(bookName.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book name, null book names cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtBookName.requestFocus();
        }else if(description.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's description, null book descriptons cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtDescription.requestFocus();
        }else if(author.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter authors of the book, null book authors cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtAuthor.requestFocus();
        }else if(publisher.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's publisher, null publishers cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtPublisher.requestFocus();
        }else if(txtPrice.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's buying price, null book prices cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtPrice.requestFocus();
        }else{
            try {
                pst=con.prepareStatement("update books set bookNo=?, bookName=?, description=?, author=?, publisher=?, price=? where bookId=?");           
                pst.setString(1, bookNo);
                pst.setString(2, bookName);
                pst.setString(3, description);
                pst.setString(4, author);
                pst.setString(5, publisher);
                pst.setInt(6, price);
                pst.setString(7, bookId);
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(this,"Book updated Successfully","Success Message",JOptionPane.INFORMATION_MESSAGE);
                Auto_Id();
                txtBookNo.setText("");
                txtBookName.setText("");
                txtDescription.setText("");
                txtAuthor.setText("");
                txtPublisher.setText("");
                txtPrice.setText("");
                txtBookNo.requestFocus();
                book_table();
                    } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        this.setVisible(false);
        new Home(lblUsername.getText(),imag).setVisible(true);
    }//GEN-LAST:event_homeBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        String bookId=lblID.getText();
            try {
                pst=con.prepareStatement("delete from books where bookId=?");           
                pst.setString(1, bookId);
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(this,"Book deleted Successfully from database","Success Message",JOptionPane.INFORMATION_MESSAGE);
                Auto_Id();
                txtBookNo.setText("");
                txtBookName.setText("");
                txtDescription.setText("");
                txtAuthor.setText("");
                txtPublisher.setText("");
                txtPrice.setText("");
                txtBookNo.requestFocus();
                book_table();
                    } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void txtBookNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtBookName.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtBookName.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtPrice.requestFocus();
        }
    }//GEN-LAST:event_txtBookNoKeyPressed

    private void txtBookNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtDescription.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtDescription.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtBookNo.requestFocus();
        }
    }//GEN-LAST:event_txtBookNameKeyPressed

    private void txtDescriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtAuthor.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtAuthor.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtBookName.requestFocus();
        }
    }//GEN-LAST:event_txtDescriptionKeyPressed

    private void txtAuthorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAuthorKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtPublisher.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtPublisher.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtDescription.requestFocus();
        }
    }//GEN-LAST:event_txtAuthorKeyPressed

    private void txtPublisherKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPublisherKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtPrice.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtPrice.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtAuthor.requestFocus();
        }
    }//GEN-LAST:event_txtPublisherKeyPressed

    private void txtPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String bookId=lblID.getText();
        String bookNo=txtBookNo.getText();
        String bookName=txtBookName.getText();
        String description=txtDescription.getText();
        String author=txtAuthor.getText();
        String publisher=txtPublisher.getText();
        int price=Integer.parseInt(txtPrice.getText());
        
        if(bookNo.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book number, null book numbers cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtBookNo.requestFocus();
        }else if(bookName.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book name, null book names cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtBookName.requestFocus();
        }else if(description.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's description, null book descriptons cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtDescription.requestFocus();
        }else if(author.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter authors of the book, null book authors cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtAuthor.requestFocus();
        }else if(publisher.trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's publisher, null publishers cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtPublisher.requestFocus();
        }else if(txtPrice.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter book's buying price, null book prices cannot be submitted","Submission Error",JOptionPane.CANCEL_OPTION);
            txtPrice.requestFocus();
        }else{
            try {
                pst=con.prepareStatement("insert into books (bookId,bookNo,bookName,description,author,publisher,price) values(?,?,?,?,?,?,?)");
                pst.setString(1, bookId);
                pst.setString(2, bookNo);
                pst.setString(3, bookName);
                pst.setString(4, description);
                pst.setString(5, author);
                pst.setString(6, publisher);
                pst.setInt(7, price);
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(this,"Book Added Successfully into database","Success Message",JOptionPane.INFORMATION_MESSAGE);
                Auto_Id();
                txtBookNo.setText("");
                txtBookName.setText("");
                txtDescription.setText("");
                txtAuthor.setText("");
                txtPublisher.setText("");
                txtPrice.setText("");
                txtBookNo.requestFocus();
                book_table();
                    } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtBookNo.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtPublisher.requestFocus();
        }
    }//GEN-LAST:event_txtPriceKeyPressed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String bookNo=txtSearch.getText();
        try {
            pst=con.prepareStatement("select * from books where bookNo like CONCAT('%',?,'%')");
            pst.setString(1,bookNo);
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i = 1; i <= c; i++) {
                    v.add(rs.getString("bookId"));
                    v.add(rs.getString("bookNo"));
                    v.add(rs.getString("bookName"));
                    v.add(rs.getString("description"));
                    v.add(rs.getString("author"));
                    v.add(rs.getString("publisher"));
                    v.add(rs.getInt("price"));
                }
                model.addRow(v);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String bookNo=txtSearch.getText();
        try {
            pst=con.prepareStatement("select * from books where bookNo like CONCAT('%',?,'%')");
            pst.setString(1,bookNo);
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i = 1; i <= c; i++) {
                    v.add(rs.getString("bookId"));
                    v.add(rs.getString("bookNo"));
                    v.add(rs.getString("bookName"));
                    v.add(rs.getString("description"));
                    v.add(rs.getString("author"));
                    v.add(rs.getString("publisher"));
                    v.add(rs.getInt("price"));
                }
                model.addRow(v);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int selectedIndex=table.getSelectedRow();
        
        lblID.setText(model.getValueAt(selectedIndex, 0).toString());
        txtBookNo.setText(model.getValueAt(selectedIndex, 1).toString());
        txtBookName.setText(model.getValueAt(selectedIndex, 2).toString());
        txtDescription.setText(model.getValueAt(selectedIndex, 3).toString());
        txtAuthor.setText(model.getValueAt(selectedIndex, 4).toString());
        txtPublisher.setText(model.getValueAt(selectedIndex, 5).toString());
        txtPrice.setText(model.getValueAt(selectedIndex, 6).toString());
        
        editBtn.setEnabled(true);
        deleteBtn.setEnabled(true);
        addBtn.setEnabled(false);
    }//GEN-LAST:event_tableMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        editBtn.setEnabled(false);
        deleteBtn.setEnabled(false);                              
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Books().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtBookNo;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
