/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package advancedPOS;

import javax.swing.table.DefaultTableModel;

import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author bill
 */
public class product extends javax.swing.JPanel {

    Statement s;
    PreparedStatement pst;
    ResultSet rs;
    /**
     * Creates new form customer
     */
    public product() {
        initComponents();
        product_table();
    }

    public void product_table(){
        try {
            pst=Database.myCon().prepareStatement("select * from products");
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i = 1; i < c; i++) {
                    v.add(rs.getInt("pid"));
                    v.add(rs.getString("product_name"));
                    v.add(rs.getString("barcode"));
                    v.add(rs.getString("price"));
                    v.add(rs.getInt("quantity"));
                    v.add(rs.getString("s_id"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSupplierID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtSearchId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchText = new javax.swing.JTextField();
        search = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(40, 198, 198));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jLabel1.setText("NAME :");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 60, -1));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jLabel2.setText("PRICE :");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 100, -1));
        jPanel2.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 230, 30));
        jPanel2.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 230, -1));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jLabel4.setText("QTY :");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 100, -1));
        jPanel2.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 230, 30));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jLabel5.setText("SUPPLIER'S ID :");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 110, -1));
        jPanel2.add(txtSupplierID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 230, 30));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jLabel6.setText("BARCODE :");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 100, -1));
        jPanel2.add(txtBarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 230, 30));

        searchBtn.setBackground(new java.awt.Color(24, 171, 81));
        searchBtn.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        searchBtn.setForeground(java.awt.Color.white);
        searchBtn.setText("SEARCH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel2.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, 50));

        clearBtn.setBackground(new java.awt.Color(40, 160, 148));
        clearBtn.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        clearBtn.setForeground(java.awt.Color.white);
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        jPanel2.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, 50));

        updateBtn.setBackground(new java.awt.Color(30, 136, 80));
        updateBtn.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        updateBtn.setForeground(java.awt.Color.white);
        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel2.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, -1, 50));

        saveBtn.setBackground(new java.awt.Color(40, 88, 199));
        saveBtn.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        saveBtn.setForeground(java.awt.Color.white);
        saveBtn.setText("SAVE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        jPanel2.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 70, 50));

        deleteBtn.setBackground(new java.awt.Color(199, 64, 40));
        deleteBtn.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        deleteBtn.setForeground(java.awt.Color.white);
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel2.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 450, 340));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PRODUCT INFO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSearchId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchIdKeyPressed(evt);
            }
        });
        jPanel3.add(txtSearchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 230, -1));

        jLabel3.setFont(new java.awt.Font("Ubuntu", 3, 14)); // NOI18N
        jLabel3.setText("SEARCH ID:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 90, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 450, 90));

        jPanel4.setBackground(new java.awt.Color(40, 168, 116));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "BARCODE", "PRICE", "QTY", "SUPPLIER'S ID"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 66, 485, 350));

        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextKeyPressed(evt);
            }
        });
        jPanel4.add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, -1));

        search.setFont(new java.awt.Font("Ubuntu", 3, 13)); // NOI18N
        search.setText("SEARCH WITH NAME");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel4.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 180, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 510, 430));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 460));
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String eid=txtSearchId.getText();
        try {
            pst=Database.myCon().prepareStatement("select * from products where pid LIKE CONCAT('%',?,'%')");
            pst.setString(1, eid);
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();

            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i = 1; i < c; i++) {
                    v.add(rs.getInt("pid"));
                    v.add(rs.getString("product_name"));
                    v.add(rs.getString("barcode"));
                    v.add(rs.getString("price"));
                    v.add(rs.getInt("quantity"));
                    v.add(rs.getString("s_id"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        txtName.setText("");
        txtBarcode.setText("");
        txtPrice.setText("");
        txtQty.setText("");
        txtSupplierID.setText("");
        txtName.requestFocus();
        product_table();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String name=txtName.getText();
        String barcode=txtBarcode.getText();
        String price=txtPrice.getText();
        int quantity=Integer.parseInt(txtQty.getText());
        String s_id=txtSupplierID.getText();
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int selectedIndex=table.getSelectedRow();
        int id=(int)model.getValueAt(selectedIndex, 0);
        try {
            pst=Database.myCon().prepareStatement("update products set product_name=?, barcode=?,price=?,quantity=?,s_id=? where pid=?");
            pst.setString(1,name);
            pst.setString(2,barcode);
            pst.setString(3,price);
            pst.setInt(4,quantity);
            pst.setString(5,s_id);
            pst.setInt(6,id);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Product updated successfully","Success Message",JOptionPane.INFORMATION_MESSAGE);
            txtName.setText("");
            txtBarcode.setText("");
            txtPrice.setText("");
            txtQty.setText("");
            txtSupplierID.setText("");
            txtName.requestFocus();
            product_table();
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        String name=txtName.getText();
        String barcode=txtBarcode.getText();
        String price=txtPrice.getText();
        int quantity=Integer.parseInt(txtQty.getText());
        String s_id=txtSupplierID.getText();

        try {
            pst=Database.myCon().prepareStatement("insert into products (product_name,barcode,price,quantity,s_id)values(?,?,?,?,?)");
            pst.setString(1,name);
            pst.setString(2,barcode);
            pst.setString(3,price);
            pst.setInt(4,quantity);
            pst.setString(5,s_id);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Product inserted successfully into database","Success Message",JOptionPane.INFORMATION_MESSAGE);
            txtName.setText("");
            txtBarcode.setText("");
            txtPrice.setText("");
            txtQty.setText("");
            txtSupplierID.setText("");
            txtName.requestFocus();
            product_table();
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int selectedIndex=table.getSelectedRow();
        int id=(int)model.getValueAt(selectedIndex, 0);
        try {
            pst=Database.myCon().prepareStatement("delete from products where pid=?");
            pst.setInt(1,id);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Product deleted successfully from database","Success Message",JOptionPane.INFORMATION_MESSAGE);
            txtName.setText("");
            txtBarcode.setText("");
            txtPrice.setText("");
            txtQty.setText("");
            txtSupplierID.setText("");
            txtName.requestFocus();
            product_table();
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyPressed
        
    }//GEN-LAST:event_tableKeyPressed

    private void txtSearchIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchIdKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String eid=txtSearchId.getText();
            try {
                pst=Database.myCon().prepareStatement("select * from products where pid LIKE CONCAT('%',?,'%')");
                pst.setString(1, eid);
                rs=pst.executeQuery();
                ResultSetMetaData rsm=rs.getMetaData();
                int c=rsm.getColumnCount();

                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.setRowCount(0);
                while(rs.next()){
                    Vector v=new Vector();
                    for (int i = 1; i < c; i++) {
                        v.add(rs.getInt("pid"));
                        v.add(rs.getString("product_name"));
                        v.add(rs.getString("barcode"));
                        v.add(rs.getString("price"));
                        v.add(rs.getInt("quantity"));
                        v.add(rs.getString("s_id"));
                    }
                    model.addRow(v);
                }
            } catch (SQLException ex) {
                Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtSearchIdKeyPressed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int selectedIndex=table.getSelectedRow();
        
        txtName.setText(model.getValueAt(selectedIndex, 1).toString());
        txtBarcode.setText(model.getValueAt(selectedIndex, 2).toString());
        txtPrice.setText(model.getValueAt(selectedIndex, 3).toString());
        txtQty.setText(model.getValueAt(selectedIndex, 4).toString());
        txtSupplierID.setText(model.getValueAt(selectedIndex, 5).toString());
    }//GEN-LAST:event_tableMouseClicked

    private void searchTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String product_name=searchText.getText();
            try {
                pst=Database.myCon().prepareStatement("select * from products where product_name LIKE CONCAT('%',?,'%')");
                pst.setString(1, product_name);
                rs=pst.executeQuery();
                ResultSetMetaData rsm=rs.getMetaData();
                int c=rsm.getColumnCount();

                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.setRowCount(0);
                while(rs.next()){
                    Vector v=new Vector();
                    for (int i = 1; i < c; i++) {
                        v.add(rs.getInt("pid"));
                        v.add(rs.getString("product_name"));
                        v.add(rs.getString("barcode"));
                        v.add(rs.getString("price"));
                        v.add(rs.getInt("quantity"));
                        v.add(rs.getString("s_id"));
                    }
                    model.addRow(v);
                }
            } catch (SQLException ex) {
                Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_searchTextKeyPressed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String product_name=searchText.getText();
        try {
            pst=Database.myCon().prepareStatement("select * from products where product_name LIKE CONCAT('%',?,'%')");
            pst.setString(1, product_name);
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();

            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for (int i = 1; i < c; i++) {
                    v.add(rs.getInt("pid"));
                    v.add(rs.getString("product_name"));
                    v.add(rs.getString("barcode"));
                    v.add(rs.getString("price"));
                    v.add(rs.getInt("quantity"));
                    v.add(rs.getString("s_id"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton search;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchText;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSearchId;
    private javax.swing.JTextField txtSupplierID;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
