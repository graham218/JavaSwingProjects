/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hotelmanagement.system;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bill
 */
public class Departments extends javax.swing.JFrame {

    PreparedStatement pst;
    Connection con;
    ResultSet rs;
    /**
     * Creates new form User
     */
    public Departments() {
        initComponents();
        Connect();
        //lblBackground.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("emmanuel-chigbo-jr7R01lOn1Y-unsplash.jpg")).getImage().getScaledInstance(1200, 680, Image.SCALE_SMOOTH)));
    }
    
    String username;
    BufferedImage imag;
    String userType;
    public Departments(String username, BufferedImage imag, String userType) {
        initComponents();
        Connect();
        department_Table();
        Auto_id();
        this.username=username;
        lblUsername.setText(username);
        this.imag=imag;
        lblProfile.setIcon(new ImageIcon(new javax.swing.ImageIcon(imag).getImage().getScaledInstance(120, 140, Image.SCALE_SMOOTH)));
        lblBackground.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("emmanuel-chigbo-jr7R01lOn1Y-unsplash.jpg")).getImage().getScaledInstance(lblBackground.getWidth(), lblBackground.getHeight(), Image.SCALE_SMOOTH)));
        this.userType=userType;
        lblUserType.setText(userType);
    }

    public void Connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://freedb.tech/freedbtech_orderMgmt", "freedbtech_billGraham", "86747486b");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void Auto_id(){
        try {
            Statement s=con.createStatement();
            rs=s.executeQuery("select MAX(deptNo) from departments");
            rs.next();
            rs.getString("MAX(deptNo)");
            if(rs.getString("MAX(deptNo)")==null){
                lblDepartmentNo.setText("DT001");
            }else{
                long id=Long.parseLong(rs.getString("MAX(deptNo)").substring(2,rs.getString("MAX(deptNo)").length()));
                id++;
                lblDepartmentNo.setText("DT"+String.format("%03d", id));
            }
        } catch (SQLException ex) {
            Logger.getLogger(StockInStore.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void department_Table(){
        try {
            pst=con.prepareStatement("select * from departments");
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for(int i=1;i<c;i++){
                    v.add(rs.getString("deptNo"));
                    v.add(rs.getString("deptName"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblProfile = new javax.swing.JLabel();
        homeBtn = new javax.swing.JButton();
        lblUsername = new javax.swing.JLabel();
        lblUserType = new javax.swing.JLabel();
        lblDepartmentNo = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDepartmentName = new javax.swing.JTextField();
        clearBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        exitBtn1 = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtsearch1 = new javax.swing.JTextField();
        btnSearch1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADD DEPARTMENTS");
        setMaximizedBounds(new java.awt.Rectangle(1211, 700, 700, 700));
        setMinimumSize(new java.awt.Dimension(1211, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(30, 86, 221));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblProfile.setBorder(new javax.swing.border.LineBorder(java.awt.Color.white, 3, true));
        jPanel1.add(lblProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 120, 140));

        homeBtn.setBackground(new java.awt.Color(61, 162, 23));
        homeBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        homeBtn.setForeground(java.awt.Color.white);
        homeBtn.setText("HOME");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(homeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 120, 50));

        lblUsername.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        lblUsername.setForeground(java.awt.Color.white);
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText("USERNAME");
        jPanel1.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 190, 180, -1));

        lblUserType.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        lblUserType.setForeground(java.awt.Color.white);
        lblUserType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserType.setText("USER TYPE");
        jPanel1.add(lblUserType, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 160, 180, -1));

        lblDepartmentNo.setFont(new java.awt.Font("Tibetan Machine Uni", 3, 18)); // NOI18N
        lblDepartmentNo.setForeground(java.awt.Color.white);
        lblDepartmentNo.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 3));
        jPanel1.add(lblDepartmentNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 250, 40));

        jLabel10.setFont(new java.awt.Font("Tibetan Machine Uni", 3, 18)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("DEPT NO:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 140, -1));

        jLabel5.setFont(new java.awt.Font("Tibetan Machine Uni", 3, 18)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("DEPT NAME:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        txtDepartmentName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDepartmentNameKeyPressed(evt);
            }
        });
        jPanel1.add(txtDepartmentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 250, 40));

        clearBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(128, 13, 238));
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        jPanel1.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 120, 50));

        addBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(0, 22, 255));
        addBtn.setText("ADD DEPARTMENT");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 170, 50));

        editBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        editBtn.setForeground(new java.awt.Color(29, 165, 51));
        editBtn.setText("EDIT");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel1.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 130, 50));

        exitBtn1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        exitBtn1.setForeground(new java.awt.Color(238, 13, 24));
        exitBtn1.setText("EXIT");
        exitBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtn1ActionPerformed(evt);
            }
        });
        jPanel1.add(exitBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 120, 50));

        deleteBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(238, 13, 24));
        deleteBtn.setText("DELETE DEPT");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 170, 50));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DEPT NO", "DEPARTMENT NAME"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 450, 300));

        txtsearch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearch1KeyPressed(evt);
            }
        });
        jPanel1.add(txtsearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 170, -1));

        btnSearch1.setText("SEARCH WITH DEPARTMENT NAME");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, 250, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 1090, 480));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setText("ADD - EDIT DEPARTMENTS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 690, 50));
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 720));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private int attempt=0;
    private String path1;
    private void txtDepartmentNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDepartmentNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String deptNo=lblDepartmentNo.getText();
            String deptName=txtDepartmentName.getText();

            if(txtDepartmentName.getText().trim().equals("")){
                JOptionPane.showMessageDialog(rootPane,"Please enter a department name, null department names cannot submitted","Submission Error!!",JOptionPane.CANCEL_OPTION);
                txtDepartmentName.requestFocus();
            }else{
                try {
                    pst=con.prepareStatement("insert into departments(deptNo,deptName)values(?,?)");
                    pst.setString(1, deptNo);
                    pst.setString(2, deptName);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Department added successfully into database","Success Message",JOptionPane.INFORMATION_MESSAGE);
                    txtDepartmentName.setText("");
                    txtDepartmentName.requestFocus();
                    department_Table();
                    Auto_id();
                } catch (SQLException ex) {
                    Logger.getLogger(IssueItems.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtDepartmentName.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtDepartmentName.requestFocus();
        }
    }//GEN-LAST:event_txtDepartmentNameKeyPressed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        txtDepartmentName.setText("");
        txtDepartmentName.requestFocus();
        department_Table();
        Auto_id();
        editBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        addBtn.setEnabled(true);
    }//GEN-LAST:event_clearBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String deptNo=lblDepartmentNo.getText();
        String deptName=txtDepartmentName.getText();

        if(txtDepartmentName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(rootPane,"Please enter a department name, null department names cannot submitted","Submission Error!!",JOptionPane.CANCEL_OPTION);
            txtDepartmentName.requestFocus();
        }else{
            try {
                pst=con.prepareStatement("insert into departments(deptNo,deptName)values(?,?)");
                pst.setString(1, deptNo);
                pst.setString(2, deptName);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Department added successfully into database","Success Message",JOptionPane.INFORMATION_MESSAGE);
                txtDepartmentName.setText("");
                txtDepartmentName.requestFocus();
                department_Table();
                Auto_id();
            } catch (SQLException ex) {
                Logger.getLogger(IssueItems.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        String deptNo=lblDepartmentNo.getText();
        String deptName=txtDepartmentName.getText();

        if(txtDepartmentName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(rootPane,"Please enter a department name, null department names cannot submitted","Submission Error!!",JOptionPane.CANCEL_OPTION);
            txtDepartmentName.requestFocus();
        }else{
            try {
                pst=con.prepareStatement("update departments set deptName=? where deptNo=?");
                pst.setString(1, deptName);
                pst.setString(2, deptNo);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Department Updated successfully on database","Success Message",JOptionPane.INFORMATION_MESSAGE);
                txtDepartmentName.setText("");
                txtDepartmentName.requestFocus();
                editBtn.setEnabled(false);
                deleteBtn.setEnabled(false);
                addBtn.setEnabled(true);
                department_Table();
                Auto_id();
            } catch (SQLException ex) {
                Logger.getLogger(IssueItems.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void exitBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtn1ActionPerformed
        if(JOptionPane.showConfirmDialog(this,"Do yo want to exit Hotel System?","Confirm Exit",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_exitBtn1ActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        String deptNo=lblDepartmentNo.getText();

        if(txtDepartmentName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(rootPane,"Please enter a department name, null department names cannot submitted","Submission Error!!",JOptionPane.CANCEL_OPTION);
            txtDepartmentName.requestFocus();
        }else{
            try {
                pst=con.prepareStatement("delete from departments where deptNo=?");
                pst.setString(1, deptNo);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Department deleted successfully from database","Success Message",JOptionPane.INFORMATION_MESSAGE);
                txtDepartmentName.setText("");
                txtDepartmentName.requestFocus();
                editBtn.setEnabled(false);
                deleteBtn.setEnabled(false);
                addBtn.setEnabled(true);
                department_Table();
                Auto_id();
            } catch (SQLException ex) {
                Logger.getLogger(IssueItems.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        editBtn.setEnabled(true);
        deleteBtn.setEnabled(true);
        addBtn.setEnabled(false);

        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int selectedIndex=table.getSelectedRow();
        lblDepartmentNo.setText(model.getValueAt(selectedIndex, 0).toString());
        txtDepartmentName.setText(model.getValueAt(selectedIndex, 1).toString());

        txtDepartmentName.requestFocus();
    }//GEN-LAST:event_tableMouseClicked

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        this.setVisible(false);
        new Main(lblUsername.getText(),imag,userType).setVisible(true);
    }//GEN-LAST:event_homeBtnActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        editBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
    }//GEN-LAST:event_formWindowActivated

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        String deptName=txtsearch1.getText();
        try {
            pst=con.prepareStatement("select * from departments WHERE deptName LIKE CONCAT('%',?,'%')");
            pst.setString(1,deptName);
            rs=pst.executeQuery();
            ResultSetMetaData rsm=rs.getMetaData();
            int c=rsm.getColumnCount();
            
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(rs.next()){
                Vector v=new Vector();
                for(int i=1;i<c;i++){
                    v.add(rs.getString("deptNo"));
                    v.add(rs.getString("deptName"));
                }
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void txtsearch1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearch1KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String deptName=txtsearch1.getText();
            try {
                pst=con.prepareStatement("select * from departments WHERE deptName LIKE CONCAT('%',?,'%')");
                pst.setString(1,deptName);
                rs=pst.executeQuery();
                ResultSetMetaData rsm=rs.getMetaData();
                int c=rsm.getColumnCount();

                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.setRowCount(0);
                while(rs.next()){
                    Vector v=new Vector();
                    for(int i=1;i<c;i++){
                        v.add(rs.getString("deptNo"));
                        v.add(rs.getString("deptName"));
                    }
                    model.addRow(v);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtsearch1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Departments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Departments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Departments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Departments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Departments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JToggleButton btnSearch1;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton exitBtn1;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblDepartmentNo;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblUserType;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtDepartmentName;
    private javax.swing.JTextField txtsearch1;
    // End of variables declaration//GEN-END:variables
}
